@*
저장된 세션 정보를 이용해서 자동으로 로그인 상태를 복원한다.
ClientGlobalBase 이 inject 되어야 함.  Client 의 program.cs 에서 등록해야 함.

var clinetGlobal = new ClientGlobal();
services.AddSingleton<ClientGlobal>(clinetGlobal);
services.AddSingleton<ClientGlobalBase>(clinetGlobal);
*@

@using Dual.Web.Blazor.Auth
@using Dual.Web.Blazor.Client.Auth
@using Microsoft.AspNetCore.Components.Authorization

@inject ISessionStorageService sessionStorage
@inject ILocalStorageService localStorage
@inject ClientGlobalBase ClientGlobalBase
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;

        ClientGlobalBase.UserSession = await sessionStorage.ReadEncryptedItemAsync<UserSession>("UserSession");
        ClientGlobalBase.UserSession ??= await localStorage.ReadEncryptedItemAsync<UserSession>("UserSession");
        var userSession = ClientGlobalBase.UserSession;
        if (userSession != null)
        {
            Console.WriteLine($"Trying to login with {userSession}");
            await customAuthStateProvider.UpdateAuthenticationState(userSession);
        }

        AuthenticationState authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ClientGlobalBase.AuthenticationState = authState;
    }
}