<div class="sidebar @StateCssClass">
    <DxTreeView AllowSelectNodes="true" CssClass="app-sidebar">
        <Nodes>
            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="./" Text="Overview" IconCssClass="oi oi-home"></DxTreeViewNode>

            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/controllers/controller" Text="제어" IconCssClass="oi oi-bolt">
                <Nodes>
                    <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/controllers/uploadmodel" Text="Upload" IconCssClass="oi oi-data-transfer-upload"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>


            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/hmis/hmi" Text="HMI" IconCssClass="oi oi-info">
                <Nodes>
                    <DxTreeViewNode NavigateUrl="/hmis/auto" Text="Auto" IconCssClass="oi oi-bolt"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>

            <DxTreeViewNode AllowSelection NavigateUrl="/Cctv" Text="CCTV" IconCssClass="oi oi-monitor"></DxTreeViewNode>

            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/dashboards/dashboard" Text="Dashboard" IconCssClass="oi oi-grid-four-up">
                <Nodes>
                    <DxTreeViewNode NavigateUrl="/dashboards/grid" Text="Grid view" IconCssClass="oi oi-grid-three-up"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/dashboards/query" Text="Query" IconCssClass="oi oi-zoom-out"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/dashboards/log-gantt" Text="Log Gantt" IconCssClass="oi oi-zoom-out"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>

            <DxTreeViewNode IconCssClass="oi oi-aperture" Text="Etc">
                <Nodes>
                    <DxTreeViewNode NavigateUrl="/etc/login" Text="Login" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>

            <DxTreeViewNode IconCssClass="oi oi-thumb-up" Text="Demo">
                <Nodes>
                    <DxTreeViewNode NavigateUrl="/demo/widget" Text="Test Widget" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/demo/tall-widget" Text="Tall Widget" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/demo/testio" Text="Test IO" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/demo/testhmitag" Text="Test HMI tag" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/demo/theme-switcher" Text="Test Theme" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/demo/pagegridlayout" Text="Grid Layout" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>

            <DxTreeViewNode CssClass="@rootNodeCssClass" Click="@onClickSwaggerUI" Text="Swagger" IconCssClass="oi oi-beaker"></DxTreeViewNode>


        </Nodes>
    </DxTreeView>
</div>

 @code {
    const string rootNodeCssClass = "root-item";
    [Parameter] public string StateCssClass { get; set; }
    async Task onClickSwaggerUI() => await JsDual.OpenNewWindow("swagger");


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
    }
}