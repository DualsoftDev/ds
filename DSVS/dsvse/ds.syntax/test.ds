
[task]M = {U; D}  // Motor up / down
[task]B = {F1; F2; F3; F4}    // Button.층 호출버튼
[task]S = {S1D; S2D; S2U; S3D; S3U; S4U, xxx.a.b.c}    // Sensor Up, Down    //의도적인 , 에러
[flow]My ={
    [accsre] = {B; S}
    [acce] = {B; S}
    [accs] = {M}
    // - TODO: todo some thing "abcd"
    /*
     COMMENT
     - TODO: aaaa
     */
    [accs] = {a, B}    //의도적인 , 에러
    [macro=T] = {  //층간 이송 행위 Task
        T.F12 = { M.U ~ S.S2U }
        T.F23 = { M.U ~ S.S3U }
        T.F34 = { M.U ~ S.S4U }
        T.F43 = { M.D ~ S.S3D }
        T.F32 = { M.D ~ S.S2D ; A < B |> C}        //의도적인 에러 - ;, <, >, |
        T.F21 = { M.D ~ S.S1D, S.S2U }    // comma test
    }
    // 호출 Set기억 
    B.F1 > Set1F <| T.21;    //의도적인 에러
    B.F2 > Set2F <| T.F32;
           Set2F <| T.F12;
    B.F3 > Set3F <| T.F23;
           Set3F <| T.F43;
    B.F4 > Set4F <| T.F34 , AndTest ? OrTest;  
    
    // 층간 상하강 행위간 인터락
    
    T.F12 <||> T.F21
    T.F34 |> T.F23 <||> T.F32 <| T.F21
    T.F34 <||> T.F43 ? test , tset2;
    
    //호출에 따른 층간 상하강 행위   
    T.F12 < (Set2F | Set3F | Set4F) & T.F21
    T.F23 < (Set3F | Set4F) & (T.F12 | T.F32) 
    T.F34 <  Set4F & (T.F43 | T.F23)
    T.F43 < (Set1F | Set2F | Set3F) & T.F34 
    T.F32 < (Set1F | Set2F) & (T.F23 | T.F43)
    T.F21 <  Set1F & (T.F12 | T.F32)
}