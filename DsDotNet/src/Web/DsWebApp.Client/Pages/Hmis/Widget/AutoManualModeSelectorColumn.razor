@*  *@

@using System.Reactive.Subjects
@*
https://supportcenter.devexpress.com/ticket/details/t1135370/grid-for-blazor-how-to-create-reusable-dxgridcommandcolumn
*@


@inherits DxGridCommandColumn
@base.BuildRenderTree


@code {
    [CascadingParameter] public IGrid MyGrid { get; set; }

    [Parameter] public Func<object, CsHMISelectLampMode> SelectorGetter { get; set; }


    protected override void OnInitialized() {
        base.OnInitialized();
        HeaderTemplate = context => @<span>@Caption</span>;
        CellDisplayTemplate = context =>
        {
            object row = context.DataItem;
            // return @<DxButton Text="@Caption" RenderStyle="ButtonRenderStyle.Primary" Click=@(() => OnClick.InvokeSafeAsync(context.DataItem)) />;
            return@<AutoManualModeSelector Selector="SelectorGetter.Invoke(row)" />    ;
        };
    }
}
