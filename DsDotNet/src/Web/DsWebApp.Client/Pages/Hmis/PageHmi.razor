@* PageHmi *@

@page "/hmis/hmi"

@using System.Collections.ObjectModel
@using static Engine.Core.TagWebModule
@using HMIButton = Tuple<Engine.Core.TagWebModule.TagWeb, Engine.Core.TagWebModule.TagWeb>  @* HMIPush * HMIFlickerLamp *@
@inherits CompHmiLoader
@implements IDisposable

@attribute [Authorize(Roles = "Administrator")]

<h3>HMI</h3>

@if (_loading)
{
    <p><em>Loading...</em></p>
}
else
{
    <DxButton Text="Hello" Click="@(() => { Console.WriteLine("Clicked");})"/>
    <CompWgtPbWithLamp Text="ToggleMe Lamp" IsOn="@true" Click="@(() => { Console.WriteLine("Clicked");})"/>
    if (_system == null)
    {
        <p><em>No loaded system?  (System is null)</em></p>
        <br/>
        <br/>
        <button class="btn btn-primary" @onclick="@(() => navigateTo("/controllers/uploadmodel"))">Upload model</button>
    }
    else
    {
        <p>@_system.Name</p>
        <p>
            <button class="btn btn-primary" @onclick="@(() => navigateTo("/hmis/auto"))">자동 조작</button>
            <button class="btn btn-primary" @onclick="@(() => navigateTo("/hmis/manual"))">수동 조작</button>
            <button class="btn btn-primary" @onclick="@(() => navigateTo("/hmis/flow"))">Flow 모니터</button>
            <button class="btn btn-primary" @onclick="@(() => navigateTo("/hmis/alarm"))">알람 리스트</button>
        </p>
    }
}


@code {
    // protected override async Task OnInitializedAsync()
    // {
    //     await base.OnInitializedAsync();
    // }
    public void Dispose()
    {
        Console.WriteLine($"Disposing PageHmi.razor");
    }

    void navigateTo(string url) => NavigationManager.NavigateTo(url);
}