@* CompHmiLoader *@

@code {
    protected HMIPackage _hmiPackage;
    protected HMISystem _system => _hmiPackage?.System;
    protected HMIDevice[] _devices => _hmiPackage?.Devices;
    protected bool _loading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _hmiPackage = ClientGlobal.HmiPackage;
        if (_hmiPackage == null)
        {
            Console.WriteLine("Loading HmiPackage from server..");
            var result = await Http.GetResultSimpleAsync<HMIPackage>($"api/hmi/package");
            result.Iter(
                okPackage => {
                    if (okPackage == null)
                    {
                        JsDual.Alert("Check model loaded on server.  HmiPackage is null.");
                        return;
                    }

                    ClientGlobal.HmiPackage = _hmiPackage = okPackage.Tee(pkg => pkg.BuildTagMap());
                },
                async err => await JsDual.Alert(err));
        }

        _loading = false;
    }
}
