@using static Engine.Core.InfoPackageModule
@* CompDashboardInfoFetcher *@

@code {
    public InfoSystem InfoSystem { get; set; }
    [Parameter] public EventCallback<InfoSystem> OnInfoSystemUpdated { get; set; }      // obj = {InfoBase, InfoDevice}

    protected HubConnectionManager _hubConnectionManager;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var result = await Http.GetRestResultAsync<string>("/api/info");
        result.Iter(
            ok => InfoSystem = Newtonsoft.Json.JsonConvert.DeserializeObject<InfoSystem>(ok),
            err => JsDual.Alert($"Failed to fetch info for dashboard.  {err}")
        );

        HubConnection hubConnection = await NavigationManager.ToAbsoluteUri("/hub/info").StartHubAsync();
        _hubConnectionManager = new HubConnectionManager(hubConnection, registerHubConnection);
        Console.WriteLine($"Hub initialized on PageDashboardGrid.razor");


        IDisposable registerHubConnection(HubConnection hubConnection)
        {
            return hubConnection.On<string>(SK.S2CNInfoChanged, async (string infoSystemStr) =>
            {
                await Task.Yield();
                bool initial = InfoSystem == null;
                InfoSystem = Newtonsoft.Json.JsonConvert.DeserializeObject<InfoSystem>(infoSystemStr);
                await OnInfoSystemUpdated.InvokeAsync(InfoSystem);
            });
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnectionManager != null)
        {
            await _hubConnectionManager.DisposeAsync();
            _hubConnectionManager = null;
        }
    }
}
