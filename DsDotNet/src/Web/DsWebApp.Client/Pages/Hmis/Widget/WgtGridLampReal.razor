@* WgtGridLampReal *@
@if (!_loading)
{
    <div style="display: flex; align-items: center;">
        <WgtEmbeddedLampReal Real=Real @ref="_lampRef" />
        <div id="@_guid">@_text</div>
    </div>
}


@code {
    WgtEmbeddedLampReal _lampRef;

    [Parameter] public HMIReal Real { get; set; }

    string _guid;
    string _text;
    bool _loading = true;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _guid = Guid.NewGuid().ToString();
        _text = getText();
        _loading = false;
    }

    string getText()
    {
        if ((bool)Real.ErrorTxLamp.Value)
            return "TxError";
        else if ((bool)Real.ErrorRxLamp.Value)
            return "RxError";
        else if ((bool)Real.ReadyLamp.Value)
            return "Ready";
        else if ((bool)Real.GoingLamp.Value)
            return "Going";
        else if ((bool)Real.FinishLamp.Value)
            return "Finish";
        else if ((bool)Real.HomingLamp.Value)
            return "Homing";
        else if ((bool)Real.OriginLamp.Value)
            return "Origin";
        else if ((bool)Real.PauseLamp.Value)
            return "Pause";
        else
            return "Not Yet!";
    }





    // public async Task SetStatus4Async(Status4 status4)
    // {
    //     Console.WriteLine($"New lamp state: {status4}");
    //     _status4 = status4;

    //     await _lampRef.SetLampStateAsync(_status4);

    //     await JsDual.SetInnerText(_guid, getText());
    // }
}

