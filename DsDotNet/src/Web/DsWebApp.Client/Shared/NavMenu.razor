<div class="sidebar @StateCssClass">
    <DxTreeView AllowSelectNodes="true" CssClass="app-sidebar">
        <Nodes>
            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="./" Text="Overview" IconCssClass="oi oi-home"></DxTreeViewNode>
            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/hmis/hmi" Text="HMI" IconCssClass="oi oi-info"></DxTreeViewNode>

            <DxTreeViewNode Text="제어">
                <Nodes>
                    <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/controllers/controller" Text="제어반" IconCssClass="oi oi-bolt"></DxTreeViewNode>
                    <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/controllers/uploadmodel" Text="Upload" IconCssClass="oi oi-data-transfer-upload"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>


            <DxTreeViewNode Text="HMI's'">
                <Nodes>
                    <DxTreeViewNode NavigateUrl="/demo/testio" Text="Test IO" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                    <DxTreeViewNode NavigateUrl="/demo/testhmitag" Text="Test HMI tag" IconCssClass="oi oi-puzzle-piece"></DxTreeViewNode>
                </Nodes>
            </DxTreeViewNode>

            <DxTreeViewNode CssClass="@rootNodeCssClass" NavigateUrl="/dashboards/dashboard" Text="Dashboard" IconCssClass="oi grid-four-up"></DxTreeViewNode>

            <DxTreeViewNode CssClass="@rootNodeCssClass" Click="@onClickSwaggerUI" Text="Swagger" IconCssClass="oi oi-beaker"></DxTreeViewNode>


        </Nodes>
    </DxTreeView>
</div>

@code {
    const string rootNodeCssClass = "root-item";
    [Parameter] public string StateCssClass { get; set; }
    async Task onClickSwaggerUI() => await JsDual.OpenNewWindow("swagger");
}