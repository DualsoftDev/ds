@* CompHmiFlowTable *@

@using Engine.Core
@using System.Reactive.Subjects

@if (_loading)
{
    <p><em>Loading flow tables...</em></p>
}
else    
{
    <DxGrid Data="Flows" @ref="MyGrid">
        <Columns>
            @* <DxGridDataColumn FieldName="Name" Caption="Flow"></DxGridDataColumn> *@
            <DxGridCommandColumn Caption="Flow">
                <HeaderTemplate>Flow</HeaderTemplate>
                <CellDisplayTemplate>
                    <DxButton Click="() => onFlow(context.DataItem)"
                              Text="@(((HMIFlow)context.DataItem).Name)"
                              RenderStyle="ButtonRenderStyle.Info" />
                </CellDisplayTemplate>
            </DxGridCommandColumn>

            <LampFlowColumn Caption="상태" />

            <AutoManualModeSelectorColumn Caption="Auto/Manual" SelectorGetter="@((dataItem) =>((HMIFlow)dataItem).AutoManualSelectLampMode)" />

            <ButtonLampModeColumn    Caption="Drive"   CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).DrivePushLampMode)" />
            <ButtonLampModeColumn    Caption="Stop"    CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).StopPushLampMode)" />
            <ButtonLampColumn        Caption="Clear"   CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).ClearPushLamp)" />
            <ButtonLampModeColumn    Caption="Em.Stop" CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).EmergencyPushLampMode)" ForceWidth=120 />
            <ButtonLampModeColumn    Caption="Test"    CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).TestPushLampMode)" />
            <ButtonLampColumn        Caption="Home"    CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).HomePushLamp)" />
            <ButtonLampModeColumn    Caption="Ready"   CompositeGetter="@((dataItem) =>((HMIFlow)dataItem).ReadyPushLampMode)" />

        </Columns>
    </DxGrid>
}

@code {
    IGrid MyGrid { get; set; }
    bool _loading = true;
    [CascadingParameter(Name = "TagManager")] public CompHmiTagManager TagManager { get; set; }
    [Parameter] public HMIFlow[] Flows { get; set; }



    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _loading = false;
    }


    void onFlow(object dataItem)
    {
        var flow = (HMIFlow)dataItem;
        var name = flow.Name;
        NavigationManager.NavigateTo($"hmis/flow/{name}");
    }


    async Task onAuto(object dataItem)
    {
        var flow = (HMIFlow)dataItem;
        await TagManager.PostTagAsync(flow.GetAuto(), true);
    }

    async Task onManual(object dataItem)
    {
        var flow = (HMIFlow)dataItem;
        await TagManager.PostTagAsync(flow.GetManual(), true);
    }
}



