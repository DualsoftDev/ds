https://blog.naver.com/PostView.naver?blogId=mech19&logNo=222350951524&categoryNo=37&parentCategoryNo=0&viewDate=&currentPage=1&postListTopCurrentPage=1&from=search

1. 펑션과 펑션블럭의 차이점

​

먼저 펑션과 펑션블럭의 차이점을 알아보죠.

​

첫번째, 펑션은 1스캔타임에 즉시 출력이 발생하지만,

펑션블럭은 여러스캔타임에 걸쳐서 최종 연산 결과를 출력합니다.

​

두번째, 펑션은 출력이 한개인데 반해 펑션블럭은 출력이 여러개가 될 수 있습니다.

​

또 한가지를 더 들자면, 펑션은 1스캔타임에 즉시 출력을 내보내지만

펑션블럭은 여러스캔타임에 걸쳐서 최종 연산결과를 출력하기 때문에

여러스캔타임동안 연산되는 데이터를 보관하기 위한 내부 메모리가 필요합니다.

​

즉 세번째 차이점으로, 펑션블럭은 내부 메모리를 가지고 인스턴스 변수 선언을 합니다.

무슨의미인지 잘 이해가 안가시나요??

직접 비교를 통해 알아보겠습니다.

​

먼저 대표적인 펑션인 ADD펑션입니다.

2. 펑션과 펑션블럭 사용시 주의할 점

앞으로 사용 예시를 보면서 직접 프로그래밍 해 보면 아시겠지만,

펑션과 펑션블럭에서 좌측모선과 우측모선에 연결되는 단자는 입력단자 1포인트, 출력단자 1포인트입니다.

이걸 어기게 되면 에러가 발생하니 조심해야 합니다.

​

그리고 펑션이나 펑션 블럭에 연결할 수 있는 전원의 흐름선은 단 하나인것을 기억해야 합니다.

펑션이나 펑션 블럭을 연달아 이어서 사용할 수도 있고,

펑션과 펑션 블럭의 출력에 전원 흐름선을 연결하고 거기에 접점등을 연결하여 로직 연산을 할 수도 있지만,

전원흐름선은 단 하나만 연결해야 하는것을 꼭 기억해야 합니다.

​

마지막으로 펑션에는 EN이라는 입력과 ENO라는 출력이 존재하는데,

EN은 어떠한 경우에도 전원 흐름선인 모선과 연결되어야 하지만 ENO는 꼭 모선과 연결되어야 하는것은 아닙니다.

EN의 값이 1이되면 해당 펑션은 수행되고 ENO의 값은 EN의 값이 그대로 나오지만 펑션 수행중 에러가 발생되면

ENO의 값은 0이 됩니다.

만약 ENO가 아닌 다른 출력단자를 전원의 흐름선으로 사용한다면 해당 출력의 데이터 타입은 반드시 BOOL이

되어야 합니다.

또한 ENO가 아닌 다른 출력단자를 전원의 흐름선으로 사용한다면 ENO에는 아무것도 연결하면 안됩니다.