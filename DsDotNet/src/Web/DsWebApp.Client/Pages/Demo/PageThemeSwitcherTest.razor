@page "/demo/theme-switcher"
@using Dual.Web.Blazor.Client.Theme
@inject ILocalStorageService localStorage
<h3>PageThemeTest</h3>

@* <CompThemeSwitcher Theme="@(Theme.BootstrapLumen)" @ref="_themeSwitcherRef" /> *@
<CompThemeSwitcher @ref="_themeSwitcherRef" />

<button @onclick="@(() => changeTheme(Theme.DevExpressDark))">Dark Theme</button>
<button @onclick="@(() => changeTheme(Theme.DevExpressBerry))">Berry Theme</button>
<button @onclick="@(() => changeTheme(Theme.DevExpressPurple))">Purple</button>
<button @onclick="@(() => changeTheme(Theme.DevExpressWhite))">Light Theme</button>

<button @onclick="@(() => changeTheme(Theme.BootstrapCerulean))">Cerulean</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapCyborg))">Cyborg</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapFlatly))">Flatly</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapJournal))">Journal</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapLitera))">Litera</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapLumen))">Lumen</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapLux))">Lux</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapPulse))">Pulse</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapSimplex))">Simplex</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapSolar))">Solar</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapSuperhero))">Superhero</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapUnited))">United</button>
<button @onclick="@(() => changeTheme(Theme.BootstrapYeti))">Yeti</button>


@code {
    CompThemeSwitcher _themeSwitcherRef;
    async Task changeTheme(Theme theme) {
        await localStorage.SetItemAsync("Theme", theme);
        await _themeSwitcherRef.ChangeTheme(theme);
    }
}
