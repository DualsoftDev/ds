@* CompHmiLoader *@

@code {
    protected HMIPackage _hmiPackage;
    /// <summary>
    /// HMIPackage.System
    /// </summary>
    protected HMISystem _system => _hmiPackage?.System;
    protected HMIDevice[] _devices => _hmiPackage?.Devices;
    protected bool _loading { get; set; } = true;

    /// <summary>
    /// HMI 관련 기능 초기화.
    /// <br/> - 서버로부터 ClientGlobal.HmiPackage 정보 가져오기
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _hmiPackage = ClientGlobal.HmiPackage;
        if (_hmiPackage == null)
        {
            // Console.WriteLine("Loading serialized HmiPackage from server..");
            // var strResult = await Http.GetStringAsync($"api/hmi/package-string");
            // var xxx = strResult.IsNullOrEmpty() ? "NULL" : "NonNull";
            // Console.WriteLine($"Got {strResult}: {xxx}");
            // var package = NewtonsoftJson.DeserializeObject<HMIPackage>(strResult);
            // Console.WriteLine("Loaded serialized HmiPackage from server..");

            // Console.WriteLine("Loading serialized HmiPackage from server..");
            // var restStrResult = await Http.GetRestResultAsync<string>($"api/hmi/package-rest-string");
            // Console.WriteLine($"Got {restStrResult.Value}");
            // var package = NewtonsoftJson.DeserializeObject<HMIPackage>(restStrResult.Value);
            // Console.WriteLine("Loaded serialized HmiPackage from server..");


            Console.WriteLine("Loading serialized HmiPackage from server..");
            var restResult = await Http.GetRestResultViaSerialAsync<HMIPackage>($"api/hmi/package-rest-string");
            // var package = restResult.Value;
            // Console.WriteLine($"Got {package.IP}");
            // Console.WriteLine("Loaded serialized HmiPackage from server..");
            restResult.Iter(
                okPackage =>
                {
                    if (okPackage == null)
                    {
                        JsDual.Alert("Check model loaded on server.  HmiPackage is null.");
                        return;
                    }

                    ClientGlobal.HmiPackage = _hmiPackage = okPackage.Tee(pkg => pkg.BuildTagMap());
                },
                async err => await JsDual.Alert(err));


            // Console.WriteLine("Loading HmiPackage from server..");
            // var result = await Http.GetRestResultViaSerialAsync<HMIPackage>($"api/hmi/package");
            // Console.WriteLine("Loaded HmiPackage from server..");
            // result.Iter(
            //     okPackage => {
            //         if (okPackage == null)
            //         {
            //             JsDual.Alert("Check model loaded on server.  HmiPackage is null.");
            //             return;
            //         }

            //         ClientGlobal.HmiPackage = _hmiPackage = okPackage.Tee(pkg => pkg.BuildTagMap());
            //     },
            //     async err => await JsDual.Alert(err));
        }

        _loading = false;
    }
}
