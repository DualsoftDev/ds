[sys ip = localhost] DS_Library = {
    [flow] RepeatFlow = {
        forwardwork <||> backwardwork;
    }
    [flow] SingleActingFlow = {
        forwardwork <||> backwardwork;
    }
    [flow] OnOffFlow = {
        on <||> off;
    }
    [flow] MovingFlow = {
        movework <||> clearwork;
        movework > clearwork;
    }
    [interfaces] = {
        FWD = { RepeatFlow.forwardwork ~ RepeatFlow.forwardwork }
        BWD = { RepeatFlow.backwardwork ~ RepeatFlow.backwardwork }
        ADV = { RepeatFlow.forwardwork ~ RepeatFlow.forwardwork }
        RET = { RepeatFlow.backwardwork ~ RepeatFlow.backwardwork }
        UP = { RepeatFlow.forwardwork ~ RepeatFlow.forwardwork }
        DN = { RepeatFlow.backwardwork ~ RepeatFlow.backwardwork }
        "+" = { RepeatFlow.forwardwork ~ RepeatFlow.forwardwork }
        "-" = { RepeatFlow.backwardwork ~ RepeatFlow.backwardwork }
        AD = { RepeatFlow.forwardwork ~ RepeatFlow.forwardwork }
        RT = { RepeatFlow.backwardwork ~ RepeatFlow.backwardwork }
        "FWD[P]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "BWD [_]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "ADV[P]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "RET [_]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "UP[P]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "DN [_]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "+ [P]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "- [_]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "AD [P]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "RT [_]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "UP[_]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "DN [P]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "+ [_]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "- [P]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "FWD[_]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "BWD [P]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "ADV[_]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "RET [P]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "AD [_]" = { SingleActingFlow.forwardwork ~ SingleActingFlow.forwardwork }
        "RT [P]" = { SingleActingFlow.backwardwork ~ SingleActingFlow.backwardwork }
        "ON[P]" = { OnOffFlow.on ~ OnOffFlow.on }
        "OFF[_]" = { OnOffFlow.off ~ OnOffFlow.off }
        ON = { OnOffFlow.on ~ OnOffFlow.on }
        OFF = { OnOffFlow.off ~ OnOffFlow.off }
        DO = { MovingFlow.movework ~ MovingFlow.clearwork }
        FWD <||> BWD;
        ADV <||> RET;
        UP <||> DN;
        "+" <||> "-";
        AD <||> RT;
        "FWD[P]" <||> "BWD [_]";
        "ADV[P]" <||> "RET [_]";
        "UP[P]" <||> "DN [_]";
        "+ [P]" <||> "- [_]";
        "AD [P]" <||> "RT [_]";
        "UP[_]" <||> "DN [P]";
        "+ [_]" <||> "- [P]";
        "FWD[_]" <||> "BWD [P]";
        "ADV[_]" <||> "RET [P]";
        "AD [_]" <||> "RT [P]";
        "ON[P]" <||> "OFF[_]";
        ON <||> OFF;
    }
    [prop] = {
        [finish] = {
            RepeatFlow.backwardwork;
            SingleActingFlow.backwardwork;
            OnOffFlow.off;
            MovingFlow.clearwork;
        }
    }
}