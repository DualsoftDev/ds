@page "/demo/testhmitag"

@using Dual.Web.Blazor.ServerSide
@using IO.Core
@using DevExpress.DirectX.Common.Direct2D
@implements IAsyncDisposable


<EditForm Model="@_tagWeb" OnValidSubmit="@HandleSubmit">
    <InputText @bind-Value="@_tagWeb.Name" />
    <InputNumber @bind-Value="@_tagWeb.Kind" />
    <InputCheckbox @bind-Value="@_flag" />
    <button type="submit">제출</button>
</EditForm>


<button class="navbar-toggler bg-primary d-block" title="send any" @onclick="onTestSignalR">
    <span class="navbar-toggler-icon"></span>
    Send Any
</button>


<h3>Hmi Tag Test</h3>

@code {
    HubConnectionManager _hubConnectionManager;

    // string _name;
    // int _kind;
    bool _flag;
    TagWeb _tagWeb = new("my.STN01.WORK1", false, 11018, "");

    private async Task HandleSubmit()
    {
        TagWeb tagWeb = new(_tagWeb.Name, _flag, _tagWeb.Kind, _tagWeb.KindDescription);
        Console.WriteLine($"TagWeb: Name={tagWeb.Name}, Kind={tagWeb.Kind}");
        var response = await Http.PostAsJsonAsync("api/hmitag", tagWeb);
        response.EnsureSuccessStatusCode();
        string responseBody = await response.Content.ReadAsStringAsync();
        bool result = Convert.ToBoolean(responseBody);
        Console.WriteLine($"Submit result: {result}");
    }

    protected override async Task OnInitializedAsync()
    {
        HubConnection hubConnection = await NavigationManager.ToAbsoluteUri("/hub/hmitag").StartHubAsync();
        _hubConnectionManager = new HubConnectionManager(hubConnection, registerHubConnection);

        Console.WriteLine($"Hub initialized on PageHmiTagTest.razor");
        await base.OnInitializedAsync();

        IDisposable registerHubConnection(HubConnection hubConnection)
        {
            return hubConnection.On<TagWeb>(SK.S2CNTagWebChanged, (TagWeb change) =>
            {
                Console.WriteLine($"TagWeb change notification received with {change.Name}/{change.Kind}={change.Value}.");
            });
        }
    }

    public async ValueTask DisposeAsync()
    {
        await _hubConnectionManager.DisposeAsync();
        Console.WriteLine("PageHmiTagTest.razor disposed!");
    }

    async Task onTestSignalR()
    {
        var serializedObject = "{\"RawValue\":false,\"Type\":1}";
        var response = await Http.PostAsJsonAsync($"api/hmitag/Hello/9999", serializedObject);
    }
}
