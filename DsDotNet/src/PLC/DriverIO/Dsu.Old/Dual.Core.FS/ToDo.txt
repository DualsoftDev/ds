DONE - buildModelSample 생성시, _MANUAL, _device1 등 getAllTags 에서 나타나지 않는 tag 존재
- Dummy 인과생성 - UI가 존재하여 Condition을 변경해 주어야함
- Project(CPU) Tags 구분 Work 소속 Project Tag가 아닌 경우 처리
DONE - Model Type in Child Add(중복생성방지), Delete 
DONE (TurnOff는 TurnOn으로 조건은 Requirement와 Interlock을 Neg 시킴) - Coil 조건에 TurnOff 나오는 것 제거
DONE (External폴더에 XimInterface Project 추가) - XimInterface.dll 생성 project source 추가
DONE (build sample work에서 사용되는 tag들 모두 추가) - GetAllTags 에서 누락된 tag 모두 채우기 : build sample 에서 P0, start, S0, S1, S2, S3, REF, NREF, "I S300 2ND CLAMP1 RET", start3, RET, ADV, ...

0. Json Serialize

DONE 0. Tag List 검사
DONE -> Tag명 중복검사
DONE -> parent 정보 까지 알수있게?

DONE 1. Work의 사용 Tag 검사
DONE -> Project 에서 getAllTags 함수 만들기
DONE -> child들의 Tags까지 전부 가져오기
DONE -> work ident 모두 가져오기
DONE -> json load 시 work 검사 

 2. Work 해석하여 인과 생성
DONE -> to causality
DONE -> Action 기준으로 Zip
DONE -> 시뮬레이션, 컨트롤 카테고리 구분 하여 컨트롤 Work만 인과생성
    -> Project(CPU) Tags 구분 Work 소속 Project Tag가 아닌 경우 처리

DONE 3. 출력 > 입력 형태 Work find
DONE -> Simulation 형태 Work만 체크
DONE -> 모든 Work 분석하여 S:출력 PE:입력 형태를 찾음
DONE -> keyvaluepair로 key:입력, value:출력 
DONE -> Causality에 적용
DONE -> 자기 제약 추가

DONE 4. Manual
DONE -> Tag Property에서 속성 확인
DONE -> ADV면 ADV 메뉴얼 RET이면 RET 메뉴얼
        없으면 메뉴얼 생성 안함

6. 더미

7. Tree Usercontrol
- F2 단축키
DONE - Model tree로 이동
DONE - Delete selection.foreach로 model제거 후 제거 된 list가지고 treelist에서 for로 제거해야함
DONE - Area, Device Work 추가
DONE - Node AddRange Safety 추가 (선 중복체크)
DONE - 추가 시 자동 인덱싱
DONE - 드래그드롭 시 child이 1개면 동급 레벨로 인식
DONE - 라이브러리에서 모델로 이동 시 이름 중복이면 이름 변경
           - 이름 변경하면 WORK, DUMMY에 사용되는 이름까지 변형해줘야함 

DONE 8. 프로퍼티 
DONE - UserControl
DONE     - IProperties Wrapper Class
DONE - Core Interface
* Tag Properties - 
    - SelfHold (Boolean)
        : 자기 유지
    - ActionType (enum DeviceActionType) {ADV, RET}
        : 메뉴얼 로직 생성
    - FullName Rule (enum FullNameRule)
        : 풀네임 생성 규칙 선택

9. PLC Command

10. INotifypropertychanged

- 라이브러리 Serialize


